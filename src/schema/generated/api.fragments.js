// THIS FILE HAS BEEN AUTO-GENERATED BY "graphql-cli-generate-fragments"
// DO NOT EDIT THIS FILE DIRECTLY

export const AggregateEthContractSourceFragment = `fragment AggregateEthContractSource on AggregateEthContractSource {
  count
}
`

export const EthPersonalAccountResponseFragment = `fragment EthPersonalAccountResponse on EthPersonalAccountResponse {
  success
  message
  data {
    ...EthPersonalAccountNoNesting
  }
}
`

export const UserConnectionFragment = `fragment UserConnection on UserConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...UserEdgeNoNesting
  }
  aggregate {
    ...AggregateUserNoNesting
  }
}
`

export const LogFragment = `fragment Log on Log {
  id
  level
  objectType
  message
  stack
}
`

export const UserEdgeFragment = `fragment UserEdge on UserEdge {
  node {
    ...UserNoNesting
  }
  cursor
}
`

export const UserFragment = `fragment User on User {
  id
  createdAt
  updatedAt
  username
  email
  phone
  showEmail
  showPhone
  password
  fullname
  image
  address
  sudo
  active
  activated
  deleted
  Groups {
    ...UserGroupNoNesting
  }
  CreatedUsers {
    ...UserNoNesting
  }
  CreatedBy {
    ...UserNoNesting
  }
  LogedIns {
    ...LogedInNoNesting
  }
  EthContractSourcesCreated {
    ...EthContractSourceNoNesting
  }
  EthAccounts {
    ...EthAccountNoNesting
  }
  hasEmail
  hasPhone
}
`

export const AggregateUserFragment = `fragment AggregateUser on AggregateUser {
  count
}
`

export const EthContractSourceFragment = `fragment EthContractSource on EthContractSource {
  id
  createdAt
  updatedAt
  name
  description
  source
  CreatedBy {
    ...UserNoNesting
  }
  Accounts {
    ...EthAccountNoNesting
  }
}
`

export const ethNetFragment = `fragment ethNet on ethNet {
  id
  isListening
  peerCount
}
`

export const EthTransactionFragment = `fragment EthTransaction on EthTransaction {
  id
  createdAt
  updatedAt
  chainId
  amount
  Sender {
    ...EthAccountNoNesting
  }
  Receiver {
    ...EthAccountNoNesting
  }
  Account {
    ...EthAccountNoNesting
  }
  address
  type
}
`

export const EthPersonalAccountFragment = `fragment EthPersonalAccount on EthPersonalAccount {
  address
  balance
}
`

export const LogConnectionFragment = `fragment LogConnection on LogConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...LogEdgeNoNesting
  }
  aggregate {
    ...AggregateLogNoNesting
  }
}
`

export const ethSyncStateFragment = `fragment ethSyncState on ethSyncState {
  startingBlock
  currentBlock
  highestBlock
  knownStates
  pulledStates
}
`

export const LogEdgeFragment = `fragment LogEdge on LogEdge {
  node {
    ...LogNoNesting
  }
  cursor
}
`

export const BatchPayloadFragment = `fragment BatchPayload on BatchPayload {
  count
}
`

export const UserGroupConnectionFragment = `fragment UserGroupConnection on UserGroupConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...UserGroupEdgeNoNesting
  }
  aggregate {
    ...AggregateUserGroupNoNesting
  }
}
`

export const AuthPayloadFragment = `fragment AuthPayload on AuthPayload {
  success
  message
  token
  data {
    ...UserNoNesting
  }
}
`

export const AggregateUserGroupFragment = `fragment AggregateUserGroup on AggregateUserGroup {
  count
}
`

export const ErrorFragment = `fragment Error on Error {
  key
  message
}
`

export const LogedInEdgeFragment = `fragment LogedInEdge on LogedInEdge {
  node {
    ...LogedInNoNesting
  }
  cursor
}
`

export const UserResponseFragment = `fragment UserResponse on UserResponse {
  success
  message
  data {
    ...UserNoNesting
  }
}
`

export const LetterConnectionFragment = `fragment LetterConnection on LetterConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...LetterEdgeNoNesting
  }
  aggregate {
    ...AggregateLetterNoNesting
  }
}
`

export const EthContractSourceResponseFragment = `fragment EthContractSourceResponse on EthContractSourceResponse {
  success
  message
  data {
    ...EthContractSourceNoNesting
  }
}
`

export const AggregateLetterFragment = `fragment AggregateLetter on AggregateLetter {
  count
}
`

export const EthTransactionResponseFragment = `fragment EthTransactionResponse on EthTransactionResponse {
  success
  message
  data {
    ...EthTransactionNoNesting
  }
}
`

export const EthAccountEdgeFragment = `fragment EthAccountEdge on EthAccountEdge {
  node {
    ...EthAccountNoNesting
  }
  cursor
}
`

export const LogSubscriptionPayloadFragment = `fragment LogSubscriptionPayload on LogSubscriptionPayload {
  mutation
  node {
    ...LogNoNesting
  }
  updatedFields
  previousValues {
    ...LogPreviousValuesNoNesting
  }
}
`

export const EthTransactionConnectionFragment = `fragment EthTransactionConnection on EthTransactionConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...EthTransactionEdgeNoNesting
  }
  aggregate {
    ...AggregateEthTransactionNoNesting
  }
}
`

export const LogPreviousValuesFragment = `fragment LogPreviousValues on LogPreviousValues {
  id
  level
  objectType
  message
  stack
}
`

export const AggregateEthTransactionFragment = `fragment AggregateEthTransaction on AggregateEthTransaction {
  count
}
`

export const UserGroupSubscriptionPayloadFragment = `fragment UserGroupSubscriptionPayload on UserGroupSubscriptionPayload {
  mutation
  node {
    ...UserGroupNoNesting
  }
  updatedFields
  previousValues {
    ...UserGroupPreviousValuesNoNesting
  }
}
`

export const EthContractSourceEdgeFragment = `fragment EthContractSourceEdge on EthContractSourceEdge {
  node {
    ...EthContractSourceNoNesting
  }
  cursor
}
`

export const UserGroupPreviousValuesFragment = `fragment UserGroupPreviousValues on UserGroupPreviousValues {
  id
  name
}
`

export const LogedInFragment = `fragment LogedIn on LogedIn {
  id
  createdAt
  fake
  User {
    ...UserNoNesting
  }
}
`

export const LogedInSubscriptionPayloadFragment = `fragment LogedInSubscriptionPayload on LogedInSubscriptionPayload {
  mutation
  node {
    ...LogedInNoNesting
  }
  updatedFields
  previousValues {
    ...LogedInPreviousValuesNoNesting
  }
}
`

export const LetterFragment = `fragment Letter on Letter {
  id
  email
  subject
  message
  status
  rank
  deleteOnSend
}
`

export const LogedInPreviousValuesFragment = `fragment LogedInPreviousValues on LogedInPreviousValues {
  id
  createdAt
  fake
}
`

export const AggregateLogFragment = `fragment AggregateLog on AggregateLog {
  count
}
`

export const LetterSubscriptionPayloadFragment = `fragment LetterSubscriptionPayload on LetterSubscriptionPayload {
  mutation
  node {
    ...LetterNoNesting
  }
  updatedFields
  previousValues {
    ...LetterPreviousValuesNoNesting
  }
}
`

export const LogedInConnectionFragment = `fragment LogedInConnection on LogedInConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...LogedInEdgeNoNesting
  }
  aggregate {
    ...AggregateLogedInNoNesting
  }
}
`

export const LetterPreviousValuesFragment = `fragment LetterPreviousValues on LetterPreviousValues {
  id
  email
  subject
  message
  status
  rank
  deleteOnSend
}
`

export const LetterEdgeFragment = `fragment LetterEdge on LetterEdge {
  node {
    ...LetterNoNesting
  }
  cursor
}
`

export const EthAccountSubscriptionPayloadFragment = `fragment EthAccountSubscriptionPayload on EthAccountSubscriptionPayload {
  mutation
  node {
    ...EthAccountNoNesting
  }
  updatedFields
  previousValues {
    ...EthAccountPreviousValuesNoNesting
  }
}
`

export const AggregateEthAccountFragment = `fragment AggregateEthAccount on AggregateEthAccount {
  count
}
`

export const EthAccountPreviousValuesFragment = `fragment EthAccountPreviousValues on EthAccountPreviousValues {
  id
  createdAt
  updatedAt
  name
  chainId
  address
  type
  description
  source
  bytecode
  abi
}
`

export const EthContractSourceConnectionFragment = `fragment EthContractSourceConnection on EthContractSourceConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...EthContractSourceEdgeNoNesting
  }
  aggregate {
    ...AggregateEthContractSourceNoNesting
  }
}
`

export const EthTransactionSubscriptionPayloadFragment = `fragment EthTransactionSubscriptionPayload on EthTransactionSubscriptionPayload {
  mutation
  node {
    ...EthTransactionNoNesting
  }
  updatedFields
  previousValues {
    ...EthTransactionPreviousValuesNoNesting
  }
}
`

export const EthAccountFragment = `fragment EthAccount on EthAccount {
  id
  createdAt
  updatedAt
  name
  chainId
  address
  type
  CreatedBy {
    ...UserNoNesting
  }
  Transaction {
    ...EthTransactionNoNesting
  }
  IncomeTransactions {
    ...EthTransactionNoNesting
  }
  OutcomeTransactions {
    ...EthTransactionNoNesting
  }
  description
  source
  bytecode
  abi
  ContractSource {
    ...EthContractSourceNoNesting
  }
  balance
}
`

export const EthTransactionPreviousValuesFragment = `fragment EthTransactionPreviousValues on EthTransactionPreviousValues {
  id
  createdAt
  updatedAt
  chainId
  amount
  address
  type
}
`

export const UserGroupEdgeFragment = `fragment UserGroupEdge on UserGroupEdge {
  node {
    ...UserGroupNoNesting
  }
  cursor
}
`

export const EthAccountConnectionFragment = `fragment EthAccountConnection on EthAccountConnection {
  pageInfo {
    ...PageInfoNoNesting
  }
  edges {
    ...EthAccountEdgeNoNesting
  }
  aggregate {
    ...AggregateEthAccountNoNesting
  }
}
`

export const UserPreviousValuesFragment = `fragment UserPreviousValues on UserPreviousValues {
  id
  createdAt
  updatedAt
  username
  email
  phone
  showEmail
  showPhone
  password
  fullname
  image
  address
  sudo
  active
  activated
  deleted
}
`

export const UserSubscriptionPayloadFragment = `fragment UserSubscriptionPayload on UserSubscriptionPayload {
  mutation
  node {
    ...UserNoNesting
  }
  updatedFields
  previousValues {
    ...UserPreviousValuesNoNesting
  }
}
`

export const EthContractSourcePreviousValuesFragment = `fragment EthContractSourcePreviousValues on EthContractSourcePreviousValues {
  id
  createdAt
  updatedAt
  name
  description
  source
}
`

export const EthContractSourceSubscriptionPayloadFragment = `fragment EthContractSourceSubscriptionPayload on EthContractSourceSubscriptionPayload {
  mutation
  node {
    ...EthContractSourceNoNesting
  }
  updatedFields
  previousValues {
    ...EthContractSourcePreviousValuesNoNesting
  }
}
`

export const EthTransactionEdgeFragment = `fragment EthTransactionEdge on EthTransactionEdge {
  node {
    ...EthTransactionNoNesting
  }
  cursor
}
`

export const AggregateLogedInFragment = `fragment AggregateLogedIn on AggregateLogedIn {
  count
}
`

export const PageInfoFragment = `fragment PageInfo on PageInfo {
  hasNextPage
  hasPreviousPage
  startCursor
  endCursor
}
`

export const UserGroupFragment = `fragment UserGroup on UserGroup {
  id
  name
  Users {
    ...UserNoNesting
  }
}
`


export const AggregateEthContractSourceNoNestingFragment = `fragment AggregateEthContractSourceNoNesting on AggregateEthContractSource {
  count
}
`

export const EthPersonalAccountResponseNoNestingFragment = `fragment EthPersonalAccountResponseNoNesting on EthPersonalAccountResponse {
  success
  message
}
`

export const LogNoNestingFragment = `fragment LogNoNesting on Log {
  id
  level
  objectType
  message
  stack
}
`

export const UserEdgeNoNestingFragment = `fragment UserEdgeNoNesting on UserEdge {
  cursor
}
`

export const UserNoNestingFragment = `fragment UserNoNesting on User {
  id
  createdAt
  updatedAt
  username
  email
  phone
  showEmail
  showPhone
  password
  fullname
  image
  address
  sudo
  active
  activated
  deleted
  hasEmail
  hasPhone
}
`

export const AggregateUserNoNestingFragment = `fragment AggregateUserNoNesting on AggregateUser {
  count
}
`

export const EthContractSourceNoNestingFragment = `fragment EthContractSourceNoNesting on EthContractSource {
  id
  createdAt
  updatedAt
  name
  description
  source
}
`

export const ethNetNoNestingFragment = `fragment ethNetNoNesting on ethNet {
  id
  isListening
  peerCount
}
`

export const EthTransactionNoNestingFragment = `fragment EthTransactionNoNesting on EthTransaction {
  id
  createdAt
  updatedAt
  chainId
  amount
  address
  type
}
`

export const EthPersonalAccountNoNestingFragment = `fragment EthPersonalAccountNoNesting on EthPersonalAccount {
  address
  balance
}
`

export const ethSyncStateNoNestingFragment = `fragment ethSyncStateNoNesting on ethSyncState {
  startingBlock
  currentBlock
  highestBlock
  knownStates
  pulledStates
}
`

export const LogEdgeNoNestingFragment = `fragment LogEdgeNoNesting on LogEdge {
  cursor
}
`

export const BatchPayloadNoNestingFragment = `fragment BatchPayloadNoNesting on BatchPayload {
  count
}
`

export const AuthPayloadNoNestingFragment = `fragment AuthPayloadNoNesting on AuthPayload {
  success
  message
  token
}
`

export const AggregateUserGroupNoNestingFragment = `fragment AggregateUserGroupNoNesting on AggregateUserGroup {
  count
}
`

export const ErrorNoNestingFragment = `fragment ErrorNoNesting on Error {
  key
  message
}
`

export const LogedInEdgeNoNestingFragment = `fragment LogedInEdgeNoNesting on LogedInEdge {
  cursor
}
`

export const UserResponseNoNestingFragment = `fragment UserResponseNoNesting on UserResponse {
  success
  message
}
`

export const EthContractSourceResponseNoNestingFragment = `fragment EthContractSourceResponseNoNesting on EthContractSourceResponse {
  success
  message
}
`

export const AggregateLetterNoNestingFragment = `fragment AggregateLetterNoNesting on AggregateLetter {
  count
}
`

export const EthTransactionResponseNoNestingFragment = `fragment EthTransactionResponseNoNesting on EthTransactionResponse {
  success
  message
}
`

export const EthAccountEdgeNoNestingFragment = `fragment EthAccountEdgeNoNesting on EthAccountEdge {
  cursor
}
`

export const LogSubscriptionPayloadNoNestingFragment = `fragment LogSubscriptionPayloadNoNesting on LogSubscriptionPayload {
  mutation
  updatedFields
}
`

export const LogPreviousValuesNoNestingFragment = `fragment LogPreviousValuesNoNesting on LogPreviousValues {
  id
  level
  objectType
  message
  stack
}
`

export const AggregateEthTransactionNoNestingFragment = `fragment AggregateEthTransactionNoNesting on AggregateEthTransaction {
  count
}
`

export const UserGroupSubscriptionPayloadNoNestingFragment = `fragment UserGroupSubscriptionPayloadNoNesting on UserGroupSubscriptionPayload {
  mutation
  updatedFields
}
`

export const EthContractSourceEdgeNoNestingFragment = `fragment EthContractSourceEdgeNoNesting on EthContractSourceEdge {
  cursor
}
`

export const UserGroupPreviousValuesNoNestingFragment = `fragment UserGroupPreviousValuesNoNesting on UserGroupPreviousValues {
  id
  name
}
`

export const LogedInNoNestingFragment = `fragment LogedInNoNesting on LogedIn {
  id
  createdAt
  fake
}
`

export const LogedInSubscriptionPayloadNoNestingFragment = `fragment LogedInSubscriptionPayloadNoNesting on LogedInSubscriptionPayload {
  mutation
  updatedFields
}
`

export const LetterNoNestingFragment = `fragment LetterNoNesting on Letter {
  id
  email
  subject
  message
  status
  rank
  deleteOnSend
}
`

export const LogedInPreviousValuesNoNestingFragment = `fragment LogedInPreviousValuesNoNesting on LogedInPreviousValues {
  id
  createdAt
  fake
}
`

export const AggregateLogNoNestingFragment = `fragment AggregateLogNoNesting on AggregateLog {
  count
}
`

export const LetterSubscriptionPayloadNoNestingFragment = `fragment LetterSubscriptionPayloadNoNesting on LetterSubscriptionPayload {
  mutation
  updatedFields
}
`

export const LetterPreviousValuesNoNestingFragment = `fragment LetterPreviousValuesNoNesting on LetterPreviousValues {
  id
  email
  subject
  message
  status
  rank
  deleteOnSend
}
`

export const LetterEdgeNoNestingFragment = `fragment LetterEdgeNoNesting on LetterEdge {
  cursor
}
`

export const EthAccountSubscriptionPayloadNoNestingFragment = `fragment EthAccountSubscriptionPayloadNoNesting on EthAccountSubscriptionPayload {
  mutation
  updatedFields
}
`

export const AggregateEthAccountNoNestingFragment = `fragment AggregateEthAccountNoNesting on AggregateEthAccount {
  count
}
`

export const EthAccountPreviousValuesNoNestingFragment = `fragment EthAccountPreviousValuesNoNesting on EthAccountPreviousValues {
  id
  createdAt
  updatedAt
  name
  chainId
  address
  type
  description
  source
  bytecode
  abi
}
`

export const EthTransactionSubscriptionPayloadNoNestingFragment = `fragment EthTransactionSubscriptionPayloadNoNesting on EthTransactionSubscriptionPayload {
  mutation
  updatedFields
}
`

export const EthAccountNoNestingFragment = `fragment EthAccountNoNesting on EthAccount {
  id
  createdAt
  updatedAt
  name
  chainId
  address
  type
  description
  source
  bytecode
  abi
  balance
}
`

export const EthTransactionPreviousValuesNoNestingFragment = `fragment EthTransactionPreviousValuesNoNesting on EthTransactionPreviousValues {
  id
  createdAt
  updatedAt
  chainId
  amount
  address
  type
}
`

export const UserGroupEdgeNoNestingFragment = `fragment UserGroupEdgeNoNesting on UserGroupEdge {
  cursor
}
`

export const UserPreviousValuesNoNestingFragment = `fragment UserPreviousValuesNoNesting on UserPreviousValues {
  id
  createdAt
  updatedAt
  username
  email
  phone
  showEmail
  showPhone
  password
  fullname
  image
  address
  sudo
  active
  activated
  deleted
}
`

export const UserSubscriptionPayloadNoNestingFragment = `fragment UserSubscriptionPayloadNoNesting on UserSubscriptionPayload {
  mutation
  updatedFields
}
`

export const EthContractSourcePreviousValuesNoNestingFragment = `fragment EthContractSourcePreviousValuesNoNesting on EthContractSourcePreviousValues {
  id
  createdAt
  updatedAt
  name
  description
  source
}
`

export const EthContractSourceSubscriptionPayloadNoNestingFragment = `fragment EthContractSourceSubscriptionPayloadNoNesting on EthContractSourceSubscriptionPayload {
  mutation
  updatedFields
}
`

export const EthTransactionEdgeNoNestingFragment = `fragment EthTransactionEdgeNoNesting on EthTransactionEdge {
  cursor
}
`

export const AggregateLogedInNoNestingFragment = `fragment AggregateLogedInNoNesting on AggregateLogedIn {
  count
}
`

export const PageInfoNoNestingFragment = `fragment PageInfoNoNesting on PageInfo {
  hasNextPage
  hasPreviousPage
  startCursor
  endCursor
}
`

export const UserGroupNoNestingFragment = `fragment UserGroupNoNesting on UserGroup {
  id
  name
}
`


export const AggregateEthContractSourceDeepNestingFragment = `fragment AggregateEthContractSourceDeepNesting on AggregateEthContractSource {
  count
}
`

export const EthPersonalAccountResponseDeepNestingFragment = `fragment EthPersonalAccountResponseDeepNesting on EthPersonalAccountResponse {
  success
  message
  data {
    ...EthPersonalAccountDeepNesting
  }
}
`

export const UserConnectionDeepNestingFragment = `fragment UserConnectionDeepNesting on UserConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...UserEdgeDeepNesting
  }
  aggregate {
    ...AggregateUserDeepNesting
  }
}
`

export const LogDeepNestingFragment = `fragment LogDeepNesting on Log {
  id
  level
  objectType
  message
  stack
}
`

export const UserEdgeDeepNestingFragment = `fragment UserEdgeDeepNesting on UserEdge {
  node {
    ...UserDeepNesting
  }
  cursor
}
`

export const UserDeepNestingFragment = `fragment UserDeepNesting on User {
  id
  createdAt
  updatedAt
  username
  email
  phone
  showEmail
  showPhone
  password
  fullname
  image
  address
  sudo
  active
  activated
  deleted
  Groups {
    ...UserGroupDeepNesting
  }
  CreatedUsers {
    ...UserDeepNesting
  }
  CreatedBy {
    ...UserDeepNesting
  }
  LogedIns {
    ...LogedInDeepNesting
  }
  EthContractSourcesCreated {
    ...EthContractSourceDeepNesting
  }
  EthAccounts {
    ...EthAccountDeepNesting
  }
  hasEmail
  hasPhone
}
`

export const AggregateUserDeepNestingFragment = `fragment AggregateUserDeepNesting on AggregateUser {
  count
}
`

export const EthContractSourceDeepNestingFragment = `fragment EthContractSourceDeepNesting on EthContractSource {
  id
  createdAt
  updatedAt
  name
  description
  source
  CreatedBy {
    ...UserDeepNesting
  }
  Accounts {
    ...EthAccountDeepNesting
  }
}
`

export const ethNetDeepNestingFragment = `fragment ethNetDeepNesting on ethNet {
  id
  isListening
  peerCount
}
`

export const EthTransactionDeepNestingFragment = `fragment EthTransactionDeepNesting on EthTransaction {
  id
  createdAt
  updatedAt
  chainId
  amount
  Sender {
    ...EthAccountDeepNesting
  }
  Receiver {
    ...EthAccountDeepNesting
  }
  Account {
    ...EthAccountDeepNesting
  }
  address
  type
}
`

export const EthPersonalAccountDeepNestingFragment = `fragment EthPersonalAccountDeepNesting on EthPersonalAccount {
  address
  balance
}
`

export const LogConnectionDeepNestingFragment = `fragment LogConnectionDeepNesting on LogConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...LogEdgeDeepNesting
  }
  aggregate {
    ...AggregateLogDeepNesting
  }
}
`

export const ethSyncStateDeepNestingFragment = `fragment ethSyncStateDeepNesting on ethSyncState {
  startingBlock
  currentBlock
  highestBlock
  knownStates
  pulledStates
}
`

export const LogEdgeDeepNestingFragment = `fragment LogEdgeDeepNesting on LogEdge {
  node {
    ...LogDeepNesting
  }
  cursor
}
`

export const BatchPayloadDeepNestingFragment = `fragment BatchPayloadDeepNesting on BatchPayload {
  count
}
`

export const UserGroupConnectionDeepNestingFragment = `fragment UserGroupConnectionDeepNesting on UserGroupConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...UserGroupEdgeDeepNesting
  }
  aggregate {
    ...AggregateUserGroupDeepNesting
  }
}
`

export const AuthPayloadDeepNestingFragment = `fragment AuthPayloadDeepNesting on AuthPayload {
  success
  message
  token
  data {
    ...UserDeepNesting
  }
}
`

export const AggregateUserGroupDeepNestingFragment = `fragment AggregateUserGroupDeepNesting on AggregateUserGroup {
  count
}
`

export const ErrorDeepNestingFragment = `fragment ErrorDeepNesting on Error {
  key
  message
}
`

export const LogedInEdgeDeepNestingFragment = `fragment LogedInEdgeDeepNesting on LogedInEdge {
  node {
    ...LogedInDeepNesting
  }
  cursor
}
`

export const UserResponseDeepNestingFragment = `fragment UserResponseDeepNesting on UserResponse {
  success
  message
  data {
    ...UserDeepNesting
  }
}
`

export const LetterConnectionDeepNestingFragment = `fragment LetterConnectionDeepNesting on LetterConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...LetterEdgeDeepNesting
  }
  aggregate {
    ...AggregateLetterDeepNesting
  }
}
`

export const EthContractSourceResponseDeepNestingFragment = `fragment EthContractSourceResponseDeepNesting on EthContractSourceResponse {
  success
  message
  data {
    ...EthContractSourceDeepNesting
  }
}
`

export const AggregateLetterDeepNestingFragment = `fragment AggregateLetterDeepNesting on AggregateLetter {
  count
}
`

export const EthTransactionResponseDeepNestingFragment = `fragment EthTransactionResponseDeepNesting on EthTransactionResponse {
  success
  message
  data {
    ...EthTransactionDeepNesting
  }
}
`

export const EthAccountEdgeDeepNestingFragment = `fragment EthAccountEdgeDeepNesting on EthAccountEdge {
  node {
    ...EthAccountDeepNesting
  }
  cursor
}
`

export const LogSubscriptionPayloadDeepNestingFragment = `fragment LogSubscriptionPayloadDeepNesting on LogSubscriptionPayload {
  mutation
  node {
    ...LogDeepNesting
  }
  updatedFields
  previousValues {
    ...LogPreviousValuesDeepNesting
  }
}
`

export const EthTransactionConnectionDeepNestingFragment = `fragment EthTransactionConnectionDeepNesting on EthTransactionConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...EthTransactionEdgeDeepNesting
  }
  aggregate {
    ...AggregateEthTransactionDeepNesting
  }
}
`

export const LogPreviousValuesDeepNestingFragment = `fragment LogPreviousValuesDeepNesting on LogPreviousValues {
  id
  level
  objectType
  message
  stack
}
`

export const AggregateEthTransactionDeepNestingFragment = `fragment AggregateEthTransactionDeepNesting on AggregateEthTransaction {
  count
}
`

export const UserGroupSubscriptionPayloadDeepNestingFragment = `fragment UserGroupSubscriptionPayloadDeepNesting on UserGroupSubscriptionPayload {
  mutation
  node {
    ...UserGroupDeepNesting
  }
  updatedFields
  previousValues {
    ...UserGroupPreviousValuesDeepNesting
  }
}
`

export const EthContractSourceEdgeDeepNestingFragment = `fragment EthContractSourceEdgeDeepNesting on EthContractSourceEdge {
  node {
    ...EthContractSourceDeepNesting
  }
  cursor
}
`

export const UserGroupPreviousValuesDeepNestingFragment = `fragment UserGroupPreviousValuesDeepNesting on UserGroupPreviousValues {
  id
  name
}
`

export const LogedInDeepNestingFragment = `fragment LogedInDeepNesting on LogedIn {
  id
  createdAt
  fake
  User {
    ...UserDeepNesting
  }
}
`

export const LogedInSubscriptionPayloadDeepNestingFragment = `fragment LogedInSubscriptionPayloadDeepNesting on LogedInSubscriptionPayload {
  mutation
  node {
    ...LogedInDeepNesting
  }
  updatedFields
  previousValues {
    ...LogedInPreviousValuesDeepNesting
  }
}
`

export const LetterDeepNestingFragment = `fragment LetterDeepNesting on Letter {
  id
  email
  subject
  message
  status
  rank
  deleteOnSend
}
`

export const LogedInPreviousValuesDeepNestingFragment = `fragment LogedInPreviousValuesDeepNesting on LogedInPreviousValues {
  id
  createdAt
  fake
}
`

export const AggregateLogDeepNestingFragment = `fragment AggregateLogDeepNesting on AggregateLog {
  count
}
`

export const LetterSubscriptionPayloadDeepNestingFragment = `fragment LetterSubscriptionPayloadDeepNesting on LetterSubscriptionPayload {
  mutation
  node {
    ...LetterDeepNesting
  }
  updatedFields
  previousValues {
    ...LetterPreviousValuesDeepNesting
  }
}
`

export const LogedInConnectionDeepNestingFragment = `fragment LogedInConnectionDeepNesting on LogedInConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...LogedInEdgeDeepNesting
  }
  aggregate {
    ...AggregateLogedInDeepNesting
  }
}
`

export const LetterPreviousValuesDeepNestingFragment = `fragment LetterPreviousValuesDeepNesting on LetterPreviousValues {
  id
  email
  subject
  message
  status
  rank
  deleteOnSend
}
`

export const LetterEdgeDeepNestingFragment = `fragment LetterEdgeDeepNesting on LetterEdge {
  node {
    ...LetterDeepNesting
  }
  cursor
}
`

export const EthAccountSubscriptionPayloadDeepNestingFragment = `fragment EthAccountSubscriptionPayloadDeepNesting on EthAccountSubscriptionPayload {
  mutation
  node {
    ...EthAccountDeepNesting
  }
  updatedFields
  previousValues {
    ...EthAccountPreviousValuesDeepNesting
  }
}
`

export const AggregateEthAccountDeepNestingFragment = `fragment AggregateEthAccountDeepNesting on AggregateEthAccount {
  count
}
`

export const EthAccountPreviousValuesDeepNestingFragment = `fragment EthAccountPreviousValuesDeepNesting on EthAccountPreviousValues {
  id
  createdAt
  updatedAt
  name
  chainId
  address
  type
  description
  source
  bytecode
  abi
}
`

export const EthContractSourceConnectionDeepNestingFragment = `fragment EthContractSourceConnectionDeepNesting on EthContractSourceConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...EthContractSourceEdgeDeepNesting
  }
  aggregate {
    ...AggregateEthContractSourceDeepNesting
  }
}
`

export const EthTransactionSubscriptionPayloadDeepNestingFragment = `fragment EthTransactionSubscriptionPayloadDeepNesting on EthTransactionSubscriptionPayload {
  mutation
  node {
    ...EthTransactionDeepNesting
  }
  updatedFields
  previousValues {
    ...EthTransactionPreviousValuesDeepNesting
  }
}
`

export const EthAccountDeepNestingFragment = `fragment EthAccountDeepNesting on EthAccount {
  id
  createdAt
  updatedAt
  name
  chainId
  address
  type
  CreatedBy {
    ...UserDeepNesting
  }
  Transaction {
    ...EthTransactionDeepNesting
  }
  IncomeTransactions {
    ...EthTransactionDeepNesting
  }
  OutcomeTransactions {
    ...EthTransactionDeepNesting
  }
  description
  source
  bytecode
  abi
  ContractSource {
    ...EthContractSourceDeepNesting
  }
  balance
}
`

export const EthTransactionPreviousValuesDeepNestingFragment = `fragment EthTransactionPreviousValuesDeepNesting on EthTransactionPreviousValues {
  id
  createdAt
  updatedAt
  chainId
  amount
  address
  type
}
`

export const UserGroupEdgeDeepNestingFragment = `fragment UserGroupEdgeDeepNesting on UserGroupEdge {
  node {
    ...UserGroupDeepNesting
  }
  cursor
}
`

export const EthAccountConnectionDeepNestingFragment = `fragment EthAccountConnectionDeepNesting on EthAccountConnection {
  pageInfo {
    ...PageInfoDeepNesting
  }
  edges {
    ...EthAccountEdgeDeepNesting
  }
  aggregate {
    ...AggregateEthAccountDeepNesting
  }
}
`

export const UserPreviousValuesDeepNestingFragment = `fragment UserPreviousValuesDeepNesting on UserPreviousValues {
  id
  createdAt
  updatedAt
  username
  email
  phone
  showEmail
  showPhone
  password
  fullname
  image
  address
  sudo
  active
  activated
  deleted
}
`

export const UserSubscriptionPayloadDeepNestingFragment = `fragment UserSubscriptionPayloadDeepNesting on UserSubscriptionPayload {
  mutation
  node {
    ...UserDeepNesting
  }
  updatedFields
  previousValues {
    ...UserPreviousValuesDeepNesting
  }
}
`

export const EthContractSourcePreviousValuesDeepNestingFragment = `fragment EthContractSourcePreviousValuesDeepNesting on EthContractSourcePreviousValues {
  id
  createdAt
  updatedAt
  name
  description
  source
}
`

export const EthContractSourceSubscriptionPayloadDeepNestingFragment = `fragment EthContractSourceSubscriptionPayloadDeepNesting on EthContractSourceSubscriptionPayload {
  mutation
  node {
    ...EthContractSourceDeepNesting
  }
  updatedFields
  previousValues {
    ...EthContractSourcePreviousValuesDeepNesting
  }
}
`

export const EthTransactionEdgeDeepNestingFragment = `fragment EthTransactionEdgeDeepNesting on EthTransactionEdge {
  node {
    ...EthTransactionDeepNesting
  }
  cursor
}
`

export const AggregateLogedInDeepNestingFragment = `fragment AggregateLogedInDeepNesting on AggregateLogedIn {
  count
}
`

export const PageInfoDeepNestingFragment = `fragment PageInfoDeepNesting on PageInfo {
  hasNextPage
  hasPreviousPage
  startCursor
  endCursor
}
`

export const UserGroupDeepNestingFragment = `fragment UserGroupDeepNesting on UserGroup {
  id
  name
  Users {
    ...UserDeepNesting
  }
}
`

